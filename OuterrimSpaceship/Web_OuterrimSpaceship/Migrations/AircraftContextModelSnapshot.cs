// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_OuterrimSpaceship.DB;

#nullable disable

namespace Web_OuterrimSpaceship.Migrations
{
    [DbContext(typeof(AircraftContext))]
    partial class AircraftContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.AMachineries", b =>
                {
                    b.Property<int>("MachineryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Function")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.HasKey("MachineryId");

                    b.HasIndex("CompartmentId");

                    b.HasIndex("Label")
                        .IsUnique();

                    b.ToTable("Machineries");

                    b.HasDiscriminator<string>("Type").HasValue("Machines");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.AircraftCrewJT", b =>
                {
                    b.Property<int>("AircraftId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MercenaryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("AircraftId", "MercenaryId");

                    b.HasIndex("MercenaryId");

                    b.ToTable("Aircraft_Crew_JT");
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.AircraftSpezifications", b =>
                {
                    b.Property<int>("SpezificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FuelTankCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxAltitude")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpezificationCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Structure")
                        .HasColumnType("INTEGER");

                    b.HasKey("SpezificationId");

                    b.ToTable("Aircraft_Spezifications");
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.Aircrafts", b =>
                {
                    b.Property<int>("AircraftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Altitude")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fuel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpezificationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AircraftId");

                    b.HasIndex("SpezificationId");

                    b.ToTable("Aircrafts");
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.Compartments", b =>
                {
                    b.Property<int>("CompartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AircraftId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CompartmentId");

                    b.HasIndex("AircraftId");

                    b.ToTable("Compartments");
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.CrimeSyndicates", b =>
                {
                    b.Property<int>("SyndicateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SyndicateId");

                    b.ToTable("Crime_Syndicates");
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.Mercenaries", b =>
                {
                    b.Property<int>("MercenaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BodySkills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CombatSkill")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MercenaryId");

                    b.ToTable("Mercenaries");
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.MercenaryReputations", b =>
                {
                    b.Property<int>("SyndicateId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MercenaryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReputationChange")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SyndicateId", "MercenaryId");

                    b.HasIndex("MercenaryId");

                    b.ToTable("Mercenary_Reputations");
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.EnergySystems", b =>
                {
                    b.HasBaseType("Web_OuterrimSpaceship.Entities.AMachineries");

                    b.HasDiscriminator().HasValue("Energy_Systems");
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.EnvironmentalSystems", b =>
                {
                    b.HasBaseType("Web_OuterrimSpaceship.Entities.AMachineries");

                    b.HasDiscriminator().HasValue("Environmental_Systems");
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.Weapons", b =>
                {
                    b.HasBaseType("Web_OuterrimSpaceship.Entities.AMachineries");

                    b.HasDiscriminator().HasValue("Weapons");
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.AMachineries", b =>
                {
                    b.HasOne("Web_OuterrimSpaceship.Entities.Compartments", "Compartment")
                        .WithMany()
                        .HasForeignKey("CompartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compartment");
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.AircraftCrewJT", b =>
                {
                    b.HasOne("Web_OuterrimSpaceship.Entities.Aircrafts", "Aircraft")
                        .WithMany()
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_OuterrimSpaceship.Entities.Mercenaries", "Mercenary")
                        .WithMany()
                        .HasForeignKey("MercenaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");

                    b.Navigation("Mercenary");
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.Aircrafts", b =>
                {
                    b.HasOne("Web_OuterrimSpaceship.Entities.AircraftSpezifications", "AircraftSpezifications")
                        .WithMany()
                        .HasForeignKey("SpezificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AircraftSpezifications");
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.Compartments", b =>
                {
                    b.HasOne("Web_OuterrimSpaceship.Entities.Aircrafts", "Aircraft")
                        .WithMany()
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");
                });

            modelBuilder.Entity("Web_OuterrimSpaceship.Entities.MercenaryReputations", b =>
                {
                    b.HasOne("Web_OuterrimSpaceship.Entities.Mercenaries", "Mercenary")
                        .WithMany()
                        .HasForeignKey("MercenaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_OuterrimSpaceship.Entities.CrimeSyndicates", "Syndicate")
                        .WithMany()
                        .HasForeignKey("SyndicateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mercenary");

                    b.Navigation("Syndicate");
                });
#pragma warning restore 612, 618
        }
    }
}
